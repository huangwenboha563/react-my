[{"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/News/index.js":"1","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/Home/index.js":"2","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/App.js":"3","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/index.js":"4","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/Index/index.js":"5","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/Profile/index.js":"6","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/HouseList/index.js":"7","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/CityList/index.js":"8","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/Search/index.js":"9","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/Map/index.js":"10","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/utils/index.js":"11","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/utils/url.js":"12","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/utils/api.js":"13","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/components/SearchHeader/index.js":"14","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/HouseList/components/Filter/index.js":"15","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/HouseList/components/FilterTitle/index.js":"16","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/HouseList/components/FilterMore/index.js":"17","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/HouseList/components/FilterPicker/index.js":"18","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/components/FilterFooter/index.js":"19"},{"size":246,"mtime":1611652048482,"results":"20","hashOfConfig":"21"},{"size":3630,"mtime":1611816815294,"results":"22","hashOfConfig":"21"},{"size":781,"mtime":1611817638482,"results":"23","hashOfConfig":"21"},{"size":497,"mtime":1612335093341,"results":"24","hashOfConfig":"21"},{"size":5356,"mtime":1612005510927,"results":"25","hashOfConfig":"21"},{"size":164,"mtime":1611656015745,"results":"26","hashOfConfig":"21"},{"size":1352,"mtime":1612767080583,"results":"27","hashOfConfig":"21"},{"size":5898,"mtime":1612193875953,"results":"28","hashOfConfig":"21"},{"size":212,"mtime":1611817731016,"results":"29","hashOfConfig":"21"},{"size":7900,"mtime":1612337786482,"results":"30","hashOfConfig":"21"},{"size":982,"mtime":1611910603080,"results":"31","hashOfConfig":"21"},{"size":110,"mtime":1612335420439,"results":"32","hashOfConfig":"21"},{"size":125,"mtime":1612337418551,"results":"33","hashOfConfig":"21"},{"size":810,"mtime":1612495220701,"results":"34","hashOfConfig":"21"},{"size":4889,"mtime":1612766585169,"results":"35","hashOfConfig":"21"},{"size":1100,"mtime":1612510850005,"results":"36","hashOfConfig":"21"},{"size":2715,"mtime":1612764716097,"results":"37","hashOfConfig":"21"},{"size":2128,"mtime":1612672570828,"results":"38","hashOfConfig":"21"},{"size":915,"mtime":1612504390243,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1qbgz8i",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/News/index.js",[],["85","86"],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/Home/index.js",["87"],"import React, { Component } from 'react';\nimport { TabBar } from 'antd-mobile';\nimport { Route, Switch } from 'react-router-dom'\n// home中的首页\nimport Index from '../Index'\n// home中的找房子\nimport HouseList from '../HouseList'\n// home中资讯\nimport News from '../News'\n// houme中的我的\nimport Profile from '../Profile'\nimport './index.css'\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// console.log(this.props.location.pathname);\n\t\tthis.state = {\n\t\t\t// 控制默认选中的tab菜单\n\t\t\tselectedTab: this.props.location.pathname,\n\t\t}\n\t}\n\t// 我们点击首页的nav菜单时候，对应的tabbar没有高亮\n\t// 原因是我们原来实现该功能的时候，点击tabbar和第一次加载home或者刷新的情况\n\t// 解决方案：当点击nav导航的时候，会执行Home组件的componentDidUpdatae\n\t// 我怎么知道路由切换了呢？再查查componentUpdate能干什么...\n\tcomponentDidUpdate(prevProps,prevState) {\n\t\tconsole.log('上一次',prevProps.location.pathname)\n\t\tconsole.log('当前',this.props.location.pathname)\n\t\tif (prevProps.location.pathname !== this.props.location.pathname) {\n\t\t\tthis.setState({\n\t\t\t\tselectedTab: this.props.location.pathname\n\t\t\t})\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className='home' style={{paddingBottom:'50px  '}}>\n\t\t\t\t{/*理解嵌套路由的套路*/}\n\t\t\t\t<Route exact path='/home' component={Index}></Route>\n\t\t\t\t<Route path='/home/list' component={HouseList}></Route>\n\t\t\t\t<Route path='/home/news' component={News}></Route>\n\t\t\t\t<Route path='/home/profile' component={Profile}></Route>\n\t\t\t\t{/*底部菜单栏*/}\n\t\t\t\t<div>\n\t\t\t\t\t<TabBar unselectedTintColor=\"#888 \" tintColor=\"#21997a\" barTintColor=\"white\" noRenderContent={true}>\n\t\t\t\t\t\t<TabBar.Item\n\t\t\t\t\t\t\ttitle=\"首页\"\n\t\t\t\t\t\t\tkey=\"Life\"\n\t\t\t\t\t\t\ticon={<i className={\"iconfont icon-ind\"} />}\n\t\t\t\t\t\t\tselectedIcon={<i className={\"iconfont icon-ind\"} />}\n\t\t\t\t\t\t\t// 满足这个条件就高亮\n\t\t\t\t\t\t\tselected={this.state.selectedTab === '/home'}\n\t\t\t\t\t\t\t// 每次点击都改变selectedTab的值，才能保证每次点击的时候都高亮\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedTab: '/home',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.props.history.push('/home');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdata-seed=\"logId\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</TabBar.Item>\n\t\t\t\t\t\t<TabBar.Item\n\t\t\t\t\t\t\ticon={<i className={\"iconfont icon-findHouse\"} />}\n\t\t\t\t\t\t\tselectedIcon={<i className={\"iconfont icon-findHouse\"} />}\n\t\t\t\t\t\t\ttitle=\"找房\"\n\t\t\t\t\t\t\tkey=\"Koubei\"\n\t\t\t\t\t\t\tselected={this.state.selectedTab === '/home/list'}\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedTab: '/home/list',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.props.history.push('/home/list');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdata-seed=\"logId1\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</TabBar.Item>\n\t\t\t\t\t\t<TabBar.Item\n\t\t\t\t\t\t\ticon={<i className={\"iconfont icon-infom\"} />}\n\t\t\t\t\t\t\tselectedIcon={<i className={\"iconfont icon-infom\"} />}\n\t\t\t\t\t\t\ttitle=\"资讯\"\n\t\t\t\t\t\t\tkey=\"Friend\"\n\t\t\t\t\t\t\tselected={this.state.selectedTab === '/home/news'}\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedTab: '/home/news',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.props.history.push('/home/news');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</TabBar.Item>\n\t\t\t\t\t\t<TabBar.Item\n\t\t\t\t\t\t\ticon={<i className={\"iconfont icon-my\"} />}\n\t\t\t\t\t\t\tselectedIcon={<i className={\"iconfont icon-my\"} />}\n\t\t\t\t\t\t\ttitle=\"我的\"\n\t\t\t\t\t\t\tkey=\"my\"\n\t\t\t\t\t\t\tselected={this.state.selectedTab === '/home/profile'}\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedTab: '/home/profile',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.props.history.push('/home/profile');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</TabBar.Item>\n\t\t\t\t\t</TabBar>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/App.js",["88","89"],"import React from 'react';\n\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\n\nimport { Button } from \"antd-mobile\";\n\nimport Home from \"./pages/Home\";\nimport CityList from \"./pages/CityList\";\nimport Search from \"./pages/Search\";\nimport Map from \"./pages/Map\";\n\n\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t{/*首页，找房，资讯，我的，里面嵌套路由 */}\n\t\t\t\t<Route exact path='/' render={() => <Redirect to='/home'/>}></Route>\n\t\t\t\t<Route path='/home' component={Home}></Route>\n\t\t\t\t<Route  path='/cityList' component={CityList}></Route>\n\t\t\t\t<Route  path='/search' component={Search}></Route>\n\t\t\t\t<Route  path='/map' component={Map}></Route>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/index.js",[],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/Index/index.js",[],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/Profile/index.js",[],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/HouseList/index.js",["90"],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/CityList/index.js",["91","92","93","94"],"import React, { Component } from 'react';\n// antd-mobile相关\nimport { NavBar, Icon,Toast } from 'antd-mobile';\nimport axios from 'axios';\nimport { List, AutoSizer } from 'react-virtualized';\nimport { getCurCity } from '../../utils';\nimport './index.scss'\n\nconsole.log('List-----', List)\n\n// List data as an array of strings\n// const list = Array(100).fill('Brian Vaughn')\nfunction formatListAry(letter) {\n\tif (letter == '#') {\n\t\treturn '当前定位'\n\t}\n\tif (letter == 'hot') {\n\t\treturn '热门城市'\n\t}\n\treturn letter.toLocaleUpperCase()\n}\n\nconst TitleHeight = 36;\nconst NameHeight = 50;\n\nclass CityList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewListData: {},\n\t\t\tnewListAry: [],\n\t\t\tcurIndex: 0\n\t\t}\n\t\tthis.listCpn = React.createRef();\n\t}\n\n\t// 拿到的城市列表数据进行数据二次改造，便于后期交互\n\tformatListData(oldData) {\n\t\t// 最后想得到的数据结构是 {a:[],b:[],c:[],d:[]}   ['a','b','c','d']...\n\t\t// 无序列表\n\t\tconst newListData = {};\n\t\toldData.forEach((item) => {\n\t\t\tconst short = item.short;\n\t\t\t// 获取short的首字母\n\t\t\tconst firstLetter = short.substr(0, 1);\n\t\t\tif (!newListData[firstLetter]) {\n\t\t\t\tnewListData[firstLetter] = []\n\t\t\t\tnewListData[firstLetter].push(item);\n\t\t\t} else {\n\t\t\t\tnewListData[firstLetter].push(item);\n\t\t\t}\n\t\t})\n\t\t// console.log(newListData)\n\t\tconst newListAry = Object.keys(newListData).sort();\n\t\treturn {\n\t\t\tnewListData,\n\t\t\tnewListAry\n\t\t}\n\t}\n\n\t// 返回上一页 张氧化二岳\n\tgoBack() {\n\t\tthis.props.history.goBack();\n\t}\n\n\trowRenderer = ({\n\t\t\t\t\t\t\t\t\t key, // Unique key within array of rows 唯一表示\n\t\t\t\t\t\t\t\t\t index, // Index of row within collection 索引号\n\t\t\t\t\t\t\t\t\t isScrolling, // The List is currently being scrolled 当前项是否在滚动中\n\t\t\t\t\t\t\t\t\t isVisible, // 当前项是否可见 This row is visible within the List (eg it is not an overscanned row)\n\t\t\t\t\t\t\t\t\t style, // 将来会被应用在每一行上的样式 ，一定要给每一行添加这个属性 Style object to be applied to row (to position it)\n\t\t\t\t\t\t\t\t }) => {\n\t\tconst { newListAry, newListData } = this.state;\n\t\tconst letter = newListAry[index];\n\t\tconst curCityAry = newListData[letter];\n\t\treturn (\n\t\t\t<div key={key} style={style} className='city'>\n\t\t\t\t<div className=\"title\">{formatListAry(letter)}</div>\n\t\t\t\t{\n\t\t\t\t\tcurCityAry.map((item) => {\n\t\t\t\t\t\treturn <div className=\"name\" key={item.value} onClick={this.changeCity(item)}>{item.label}</div>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\tchangeCity = (item) => {\n\t\tconst {label,value} = item;\n\t\tconst yfCity = ['北京','上海','广州','深圳'];\n\t\treturn () => {\n\t\t\tif (yfCity.indexOf(label)>-1) {\n\t\t\t\tlocalStorage.setItem('localCity',JSON.stringify({label,value}));\n\t\t\t\tthis.props.history.go(-1);\n\t\t\t} else {\n\t\t\t\t// alert('当前城市没有房子...')\n\t\t\t\tToast.fail('当前城市没有房源',1,null,false)\n\t\t\t}\n\t\t}\n\t}\n\tasync getAreaList() {\n\t\t// 1. 获取城市列表数据\n\t\tconst areaList = await axios.get('http://localhost:8080/area/city?level=1');\n\t\t// console.log(areaList)\n\t\tconst areaListBody = areaList.data.body;\n\t\tconst newFormListData = this.formatListData(areaListBody);\n\t\tconst { newListData, newListAry } = newFormListData;\n\t\t// 2. 获取热门城市数据 & 拼接数据\n\t\tconsole.log(newFormListData)\n\t\tconst hotRes = await axios.get('http://localhost:8080/area/hot');\n\t\tconsole.log(hotRes)\n\t\tconst hotResData = hotRes.data.body;\n\t\tnewListData['hot'] = hotResData;\n\t\tnewListAry.unshift('hot');\n\t\t// 3. 当前城市 & 拼接数据\n\t\tconst curCity = await getCurCity();\n\t\tconsole.log(curCity)\n\t\tnewListData['#'] = [curCity];\n\t\tnewListAry.unshift('#');\n\t\tthis.setState({\n\t\t\tnewListData,\n\t\t\tnewListAry\n\t\t})\n\t}\n\n\tgetRowHeight = ({ index }) => {\n\t\t// console.log(index);\n\t\t// console.log('aaa',this.state);\n\t\tconst { newListData, newListAry } = this.state;\n\t\t// console.log('BB',TitleHeight,NameHeight);\n\t\t// // 标题的高度 + 城市数量*城市名称的高度\n\t\treturn (TitleHeight + newListData[newListAry[index]].length * NameHeight)\n\t}\n\n\t// 生命周期发送http请求\n\tasync componentDidMount() {\n\t\t// 获取城市列表数据\n\t\tawait this.getAreaList();\n\t\t// 注意调用这个方法要保证list组件中已经有数据了，否则会报错\n\t\tthis.listCpn.current.measureAllRows();\n\t}\n\n\trenderNewListAry = () => {\n\t\tconst { newListAry } = this.state;\n\t\treturn newListAry.map((item,index) => {\n\t\t\t// console.log(index);\n\t\t\treturn (<li className=\"city-index-item\" key={item} onClick={this.changeLetter(index)}>\n\t\t\t\t<span className={`old-class-name ${this.state.curIndex == index?'index-active':null}`}>{item === 'hot'?'热':item.toUpperCase()}</span>\n\t\t\t</li>)\n\t\t})\n\t}\n\t// 点击去执行\n\tchangeLetter = (index) => {\n\t\treturn (e) => {\n\t\t\tthis.listCpn.current.scrollToRow(index)\n\t\t}\n\t}\n\t// 用户获取list组件中渲染行的信息\n\tonRowsRendered = ({startIndex}) => {\n\t\tconst {curIndex} = this.state;\n\t\tconsole.log(startIndex);\n\t\tif (curIndex !== startIndex) { // 避免没必要的setState可以提高性能\n\t\t\tthis.setState({\n\t\t\t\tcurIndex: startIndex\n\t\t\t})\n\t\t}\n\t}\n\trender() {\n\t\tconst { newListData, newListAry } = this.state;\n\t\treturn (\n\t\t\t<div className=\"city-list\" style={{ height: '100%', paddingTop: '45px' }}>\n\t\t\t\t{/* 1. 导航 */}\n\t\t\t\t<NavBar\n\t\t\t\t\tclassName='top-nav-bar'\n\t\t\t\t\tmode=\"light\"\n\t\t\t\t\ticon={<Icon type=\"left\" />}\n\t\t\t\t\tonLeftClick={this.goBack.bind(this)}\n\t\t\t\t>城市选择</NavBar>\n\t\t\t\t{/* 2. 列表 */}\n\t\t\t\t<AutoSizer>\n\t\t\t\t\t{\n\t\t\t\t\t\t({ width, height }) => (<List\n\t\t\t\t\t\t\tref = {this.listCpn}\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\tonRowsRendered={this.onRowsRendered}\n\t\t\t\t\t\t\trowCount={newListAry.length}\n\t\t\t\t\t\t\trowHeight={this.getRowHeight}\n\t\t\t\t\t\t\trowRenderer={this.rowRenderer}\n\t\t\t\t\t\t\tscrollToAlignment='start'\n\t\t\t\t\t\t/>)\n\t\t\t\t\t}\n\t\t\t\t</AutoSizer>\n\t\t\t\t{/*3. 右侧字母列表\t*/}\n\t\t\t\t<ul className=\"city-index\">\n\t\t\t\t\t{this.renderNewListAry()}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CityList;","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/Search/index.js",[],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/Map/index.js",["95"],"import React, { Component } from 'react'\nimport { NavBar, Icon, Toast } from 'antd-mobile';\nimport { Link } from \"react-router-dom\";\n// import { BASE_URL } from '../../utils/url'\n// import axios from 'axios'\n// 对axios简单包装一下，就不用每次都写localhost:8080了\n// 关于axio的二次包装，方案很多，随便一个都可以不用纠结...\nimport { API } from '../../utils/api'\nimport './index.scss'\n\nexport default class Map extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thousesList: [],\n\t\t\tisShowList: false\n\t\t}\n\t}\n\n\t// 在该生命周期中去处理地图相关\n\tcomponentDidMount() {\n\t\t// 初始化地图实例\n\t\t// 在react叫脚手架中全局对象需要时候用window.xxx来使用\n\t\t// 获取本地存储中当前城市的信息\n\t\tconst { label, value } = JSON.parse(localStorage.getItem('localCity'));\n\t\t// 1. 创建地图实例\n\t\tconst map = new window.BMap.Map(\"container\");\n\t\tthis.map = map;\n\t\t// 添加控件 比例尺和平移缩放\n\t\tmap.addControl(new window.BMap.ScaleControl());\n\t\tmap.addControl(new window.BMap.NavigationControl());\n\t\t// 创建地址解析器实例\n\t\tconst myGeo = new window.BMap.Geocoder();\n\t\t// 将地址解析结果显示在地图上，并调整地图视野\n\t\t// 地址解析器，意思就是把当前城市比如上海放到地图里面，后台为什么不给坐标值呢？就是把\"上海\"转换为对应的坐标值\n\t\tmyGeo.getPoint(label, async (point) => {\n\t\t\t\t// point 看看\n\t\t\t\tconsole.log('point->', point);\n\t\t\t\tif (point) {\n\t\t\t\t\t// 初始化地图\n\t\t\t\t\tmap.centerAndZoom(point, 11);\n\t\t\t\t\tthis.renderOverlays(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tlabel);\n\t\tmap.addEventListener('movestart', () => {\n\t\t\tconst isShowList = this.state.isShowList;\n\t\t\tif (isShowList) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisShowList: false\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t\t// 2. 设置中心点坐标(经纬度)\n\t\t// const point = new window.BMap.Point(116.404, 39.915);\n\t\t// 3. 初始化地图，同时设置展示级别，放大级别\n\t\t// map.centerAndZoom(point, 15);\n\t}\n\n\t// 获取对应的缩放级别\n\tgetTypeAndZoom() {\n\t\t// 调用地图的api来获取当前缩放级别\n\t\tconst zoom = this.map.getZoom();\n\t\tlet nextZoom, type;\n\t\tif (zoom >= 10 && zoom < 12) { // 区\n\t\t\tnextZoom = 13;\n\t\t\ttype = 'circle';\n\t\t} else if (zoom >= 12 && zoom < 14) { // 镇\n\t\t\tnextZoom = 15;\n\t\t\ttype = 'circle';\n\t\t} else if (zoom >= 14 && zoom < 16) { // 小区\n\t\t\ttype = 'rect'\n\t\t}\n\t\tconsole.log(zoom);\n\t\treturn {\n\t\t\tnextZoom, type\n\t\t}\n\t}\n\n\t// 获取对应的房源数据\n\tasync renderOverlays(id) {\n\t\tToast.loading('加载中...', 0, null, false);\n\t\tconst res = await await API.get(`/area/map?id=${id}`);\n\t\tToast.hide();\n\t\tconst data = res.data.body;\n\t\tconst { nextZoom, type } = this.getTypeAndZoom();\n\t\t// 下一级的缩放级别，和挡墙要绘制的类型\n\t\tdata.forEach(item => {\n\t\t\tthis.createOverlays(item, nextZoom, type);\n\t\t})\n\t\tconsole.log('执行的结果...')\n\t}\n\n\t// 创建覆盖物\n\tcreateOverlays(item, nextZoom, type) {\n\t\tconsole.log('hah', item, nextZoom, type);\n\t\tconst {\n\t\t\tcoord: { latitude, longitude },\n\t\t\tcount,\n\t\t\tlabel: areaName,\n\t\t\tvalue\n\t\t} = item;\n\t\tconst areaPoint = new window.BMap.Point(longitude, latitude)\n\t\tif (type == \"circle\") { // 区和镇\n\t\t\tthis.createCircle(areaPoint, areaName, count, value, nextZoom);\n\t\t} else { // 小区 小区就不需要放大了\n\t\t\tthis.createRect(areaPoint, areaName, count, value);\n\t\t}\n\t}\n\n\t// 创建覆盖物 小区\n\tcreateCircle(areaPoint, areaName, count, value, nextZoom) {\n\t\tconst label = new window.BMap.Label('', {\n\t\t\t// position 创建一个坐标点...\n\t\t\tposition: areaPoint,\n\t\t\toffset: new window.BMap.Size(-35, -35)\n\t\t});\n\t\t// 给唯一标识\n\t\tlabel.id = value;\n\t\t// class 不是className注意\n\t\tlabel.setContent(`\n\t\t\t\t\t\t<div class=\"bubble\">\n\t\t\t\t\t\t\t<p class=\"bubble-name\">${areaName}</p>\n\t\t\t\t\t\t\t<p>${count}套</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`)\n\t\tlabel.setStyle({\n\t\t\tcursor: 'pointer',\n\t\t\tborder: '2px solid rgba(255,0,0,0)',\n\t\t\tpadding: '0px',\n\t\t\twhiteSpace: 'nowarp',\n\t\t\tfontSize: '12px',\n\t\t\tcolor: 'rgb(255,255,255)',\n\t\t\ttextAlign: 'center'\n\t\t})\n\t\t// zy65374061 张岳\n\t\tlabel.addEventListener('click', () => {\n\t\t\tconsole.log('点击了当前', label.id);\n\t\t\t// 当前被点击覆盖物下方的房源数据\n\t\t\tthis.renderOverlays(value);\n\t\t\t// 以当前覆盖物为中心，放大地图\n\t\t\t// new window.BMap.Point(item.coord.longitude, item.coord.latitude) 这个可以弄成一个变量\n\t\t\tthis.map.centerAndZoom(areaPoint, nextZoom);\n\t\t\t// 解决去掉当前覆盖物时js报错的问题\n\t\t\tsetTimeout(() => {\n\t\t\t\t// 去除当前覆盖物... 清楚地图中所有覆盖物\n\t\t\t\tthis.map.clearOverlays();\n\t\t\t})\n\t\t})\n\t\t// 添加覆盖物，有多少个item添加多少个覆盖物，创建好的label添加到地图中\n\t\tthis.map.addOverlay(label);\n\t}\n\n\t// 创建小区覆盖物\n\tcreateRect(areaPoint, areaName, count, value) {\n\t\tconst label = new window.BMap.Label('', {\n\t\t\t// position 创建一个坐标点...\n\t\t\tposition: areaPoint,\n\t\t\toffset: new window.BMap.Size(-50, -28)\n\t\t});\n\t\t// 给唯一标识\n\t\tlabel.id = value;\n\t\t// class 不是className注意\n\t\tconsole.log('setContent执行...')\n\t\tlabel.setContent(`\n\t\t\t\t\t\t<div class=\"rect\">\n\t\t\t\t\t\t\t<p class=\"rect-name\">${areaName}</p>\n\t\t\t\t\t\t\t<p class=\"rect-num\">${count}套</p>\n\t\t\t\t\t\t\t<i class=\"rect-arrow\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`)\n\t\tlabel.setStyle({\n\t\t\tcursor: 'pointer',\n\t\t\tborder: '2px solid rgba(255,0,0,0)',\n\t\t\tpadding: '0px',\n\t\t\twhiteSpace: 'nowarp',\n\t\t\tfontSize: '12px',\n\t\t\tcolor: 'rgb(255,255,255)',\n\t\t\ttextAlign: 'center'\n\t\t})\n\t\t// zy65374061 张岳\n\t\tlabel.addEventListener('click', (e) => {\n\t\t\tthis.getHousesList(value);\n\t\t\tconst target = e.changedTouches[0];\n\t\t\tthis.map.panBy(window.innerWidth / 2 - target.clientX, (window.innerHeight - 330) / 2 - target.clientY)\n\t\t})\n\t\t// 添加覆盖物，有多少个item添加多少个覆盖物，创建好的label添加到地图中\n\t\tthis.map.addOverlay(label);\n\t}\n\n\t// 获取小区房源数据\n\tasync getHousesList(id) {\n\t\ttry {\n\t\t\tToast.loading('加载中...', 0, null, false);\n\t\t\tconst res = await API.get(`/houses?cityId=${id}`);\n\t\t\tToast.hide();\n\t\t\t// console.log('小区的房源数据:', res)\n\t\t\tthis.setState({\n\t\t\t\thousesList: res.data.body.list,\n\t\t\t\t// 展示房源列表\n\t\t\t\tisShowList: true\n\t\t\t});\n\t\t} catch (e) { // 请求的过程中可能出错 保证出错了也把loading关闭掉\n\t\t\tToast.hide();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"map\">\n\t\t\t\t{/*1.导航*/}\n\t\t\t\t<NavBar\n\t\t\t\t\tmode=\"light\"\n\t\t\t\t\ticon={<Icon type=\"left\" />}\n\t\t\t\t\tonLeftClick={() => {\n\t\t\t\t\t\tthis.props.history.go(-1)\n\t\t\t\t\t}}\n\t\t\t\t>地图找房</NavBar>\n\t\t\t\t{/*2. 地图 */}\n\t\t\t\t<div id=\"container\" style={{ height: 'calc(100vh - 45px)' }}>\n\t\t\t\t\t我是地图找房\n\t\t\t\t</div>\n\t\t\t\t{/* 3. 房源列表 */}\n\t\t\t\t{/* 添加 styles.show 展示房屋列表 */}\n\t\t\t\t<div className={'houseList' + (this.state.isShowList ? ' show' : '')}>\n\t\t\t\t\t<div className='titleWrap'>\n\t\t\t\t\t\t<h1 className='listTitle'>房屋列表</h1>\n\t\t\t\t\t\t<Link className='titleMore' to=\"/home/list\">\n\t\t\t\t\t\t\t更多房源\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='houseItems'>\n\t\t\t\t\t\t{/* 房屋结构 */}\n\t\t\t\t\t\t{this.state.housesList.map(item => (\n\t\t\t\t\t\t\t<div className='house' key={item.houseCode}>\n\t\t\t\t\t\t\t\t<div className='imgWrap'>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName='img'\n\t\t\t\t\t\t\t\t\t\tsrc={`http://localhost:8080${item.houseImg}`}\n\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t\t\t\t<h3 className='title'>{item.title}</h3>\n\t\t\t\t\t\t\t\t\t<div className='desc'>{item.desc}</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t{item.tags.map(tag => (\n\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='tag tag1'\n\t\t\t\t\t\t\t\t\t\t\t\tkey={tag}\n\t\t\t\t\t\t\t\t\t\t\t>\n                        {tag}\n                      </span>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='price'>\n\t\t\t\t\t\t\t\t\t\t<span className='priceNum'>{item.price}</span> 元/月\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/utils/index.js",[],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/utils/url.js",[],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/utils/api.js",[],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/components/SearchHeader/index.js",[],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/HouseList/components/Filter/index.js",["96"],"import React, { Component } from 'react'\r\n\r\nimport FilterTitle from '../FilterTitle'\r\nimport FilterPicker from '../FilterPicker'\r\nimport FilterMore from '../FilterMore'\r\nimport { API } from \"../../../../utils/api\";\r\nimport styles from './index.module.css'\r\n\r\nconst titleSelectedStatus = {\r\n\tarea: false,\r\n\tmode: false,\r\n\tprice: false,\r\n\tmore: false\r\n}\r\n// class组件\r\nexport default class Filter extends Component {\r\n\tstate = {\r\n\t\ttitleSelectedStatus,\r\n\t\t// 控制FilterPikcer  FilterMore的显示隐藏\r\n\t\topenType: '',\r\n\t\tfiltersData: {},\r\n\t\t// 筛选条件的选中值\r\n\t\tselectedValues: {\r\n\t\t\tarea: ['area', 'null'],\r\n\t\t\tmode: ['null'],\r\n\t\t\tprice: ['null'],\r\n\t\t\tmore: []\r\n\t\t}\r\n\t}\r\n\r\n\t// 该生命周期发送http请求获取数据\r\n\tasync componentDidMount() {\r\n\t\t// 获取所有筛选条件的数据...\r\n\t\tconst id = JSON.parse(localStorage.getItem('localCity')).value;\r\n\t\tconst res = await API.get(`/houses/condition?id=${id}`);\r\n\t\tconsole.log(res);\r\n\t\tthis.setState({\r\n\t\t\tfiltersData: res.data.body\r\n\t\t})\r\n\t}\r\n\r\n\t// 实现状态更新... 要实现完整的功能，需要后续组件配合\r\n\tonTitleClick = (type) => {\r\n\t\tconsole.log(type);\r\n\t\tconst { titleSelectedStatus, selectedValues } = this.state;\r\n\t\tconst newTitleSelectedStatus = { ...titleSelectedStatus };\r\n\t\tObject.keys(titleSelectedStatus).forEach((key) => {\r\n\t\t\tif (key == type) {\r\n\t\t\t\tnewTitleSelectedStatus[key] = true;\r\n\t\t\t} else {\r\n\t\t\t\tconst selectedVal = selectedValues[key];\r\n\t\t\t\tif (key === 'area' && (selectedVal.length !== 2 || selectedVal[0] !== 'area')) {\r\n\t\t\t\t\tnewTitleSelectedStatus[key] = true;\r\n\t\t\t\t} else if (key === 'mode' && selectedVal[0] !== 'null') {\r\n\t\t\t\t\tnewTitleSelectedStatus[key] = true;\r\n\t\t\t\t} else if (key === 'price' && selectedVal[0] !== 'null') {\r\n\t\t\t\t\tnewTitleSelectedStatus[key] = true;\r\n\t\t\t\t} else if (key === 'more') { // 等做到more组件时处理\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewTitleSelectedStatus[key] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.setState({\r\n\t\t\ttitleSelectedStatus: newTitleSelectedStatus,\r\n\t\t\topenType: type\r\n\t\t})\r\n\t}\r\n\t// 点击取消执行的方法\r\n\tonCancel = () => {\r\n\t\tthis.setState({\r\n\t\t\topenType: ''\r\n\t\t})\r\n\t}\r\n\t// 作为确定按钮的事件处理程序\r\n\tonSave = (type, value) => {\r\n\t\tconst newSelectedValues = {\r\n\t\t\t...this.state.selectedValues,\r\n\t\t\t// 只更新当前type对应的值\r\n\t\t\t[type]: value\r\n\t\t}\r\n\t\tconsole.log(type, value);\r\n\t\tconst { area , mode ,price,more} = newSelectedValues;\r\n\t\t// 筛选条件数据\r\n\t\tconst filters = {};\r\n\t\tconst areaKey = area[0];\r\n\t\tlet areaValue = 'null';\r\n\t\tif (area.length === 3) {\r\n\t\t\tareaValue = area[2]!=='null'?area[2]:area[1];\r\n\t\t}\r\n\t\tfilters[areaKey] = areaValue;\r\n\t\t// 方式和组件\r\n\t\tfilters.mode = mode[0];\r\n\t\tfilters.price = price[0];\r\n\t\t// more\r\n\t\tfilters.more = more.join(',');\r\n\t\tthis.props.onFilter(filters);\r\n\t\tthis.setState({\r\n\t\t\topenType: '',\r\n\t\t\tselectedValues: newSelectedValues\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { titleSelectedStatus, filtersData, selectedValues } = this.state;\r\n\t\tconst { openType } = this.state;\r\n\t\tconsole.log(openType, typeof openType);\r\n\t\tconst isFilterPicker = (openType === 'area' || openType === 'mode' || openType === 'price');\r\n\t\tconsole.log(isFilterPicker);\r\n\t\tlet PickFiterData = [];\r\n\t\tlet cols = null;\r\n\t\tlet defaultValue = selectedValues[openType];\r\n\t\tconsole.log('defaultValue--->', defaultValue, openType);\r\n\t\tif (openType === 'area') {\r\n\t\t\tPickFiterData = [filtersData.area, filtersData.subway];\r\n\t\t\tcols = 3;\r\n\t\t} else if (openType === 'mode') {\r\n\t\t\tPickFiterData = filtersData.rentType;\r\n\t\t\tcols = 1;\r\n\t\t} else if (openType === 'price') {\r\n\t\t\tPickFiterData = filtersData.price;\r\n\t\t\tcols = 1;\r\n\t\t}\r\n\t\tconst { roomType, oriented, floor, characteristic } = filtersData;\r\n\t\tconst data = {\r\n\t\t\troomType, oriented, floor, characteristic\r\n\t\t}\r\n\t\tconst defaultMoreValue = selectedValues.more;\r\n\t\treturn (\r\n\t\t\t<div className={styles.root}>\r\n\t\t\t\t{/* 前三个菜单的遮罩层 */}\r\n\t\t\t\t{isFilterPicker && <div className={styles.mask} onClick={this.onCancel} />}\r\n\r\n\t\t\t\t<div className={styles.content}>\r\n\t\t\t\t\t{/* 标题栏 */}\r\n\t\t\t\t\t<FilterTitle titleSelectedStatus={titleSelectedStatus} onClick={this.onTitleClick} />\r\n\r\n\t\t\t\t\t{/* 前三个菜单对应的内容：\r\n\t\t\t\t\tkey={openType} 解决这个bug，通过打印state发现PickerViewr没有被重新创建...。那就添加不同的key来实现重新创建...\r\n\t\t\t\t\t如果不设置 key={openType} 的话 FilterPicker 只会执行一次\r\n\r\n\t\t\t\t\t*/}\r\n\t\t\t\t\t{isFilterPicker &&\r\n\t\t\t\t\t<FilterPicker key={openType} defaultValue={defaultValue} onCancel={this.onCancel} onSave={this.onSave}\r\n\t\t\t\t\t\t\t\t\t\t\t\tPickFiterData={PickFiterData} cols={cols} type={openType} />}\r\n\r\n\t\t\t\t\t{/* 最后一个菜单对应的内容： */}\r\n\t\t\t\t\t{openType === 'more' &&\r\n\t\t\t\t\t<FilterMore data={data} type={openType} onSave={this.onSave} defaultValue={defaultMoreValue}\r\n\t\t\t\t\t\t\t\t\t\t\tonCancel={this.onCancel} />}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/HouseList/components/FilterTitle/index.js",[],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/HouseList/components/FilterMore/index.js",[],"/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/pages/HouseList/components/FilterPicker/index.js",["97"],"import React, { Component } from 'react'\r\n\r\nimport { PickerView } from 'antd-mobile'\r\n\r\nimport FilterFooter from '../../../../components/FilterFooter'\r\n\r\nconst province = [\r\n\t{\r\n\t\tlabel: '北京',\r\n\t\tvalue: '01',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tlabel: '东城区',\r\n\t\t\t\tvalue: '01-1'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '西城区',\r\n\t\t\t\tvalue: '01-2'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '崇文区',\r\n\t\t\t\tvalue: '01-3'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '宣武区',\r\n\t\t\t\tvalue: '01-4'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tlabel: '浙江',\r\n\t\tvalue: '02',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tlabel: '杭州',\r\n\t\t\t\tvalue: '02-1',\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: '西湖区',\r\n\t\t\t\t\t\tvalue: '02-1-1'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: '上城区',\r\n\t\t\t\t\t\tvalue: '02-1-2'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: '江干区',\r\n\t\t\t\t\t\tvalue: '02-1-3'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: '下城区',\r\n\t\t\t\t\t\tvalue: '02-1-4'\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '宁波',\r\n\t\t\t\tvalue: '02-2',\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'xx区',\r\n\t\t\t\t\t\tvalue: '02-2-1'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'yy区',\r\n\t\t\t\t\t\tvalue: '02-2-2'\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '温州',\r\n\t\t\t\tvalue: '02-3'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '嘉兴',\r\n\t\t\t\tvalue: '02-4'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '湖州',\r\n\t\t\t\tvalue: '02-5'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '绍兴',\r\n\t\t\t\tvalue: '02-6'\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n]\r\n\r\nexport default class FilterPicker extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconsole.log('重新渲染了......',this.props.defaultValue)\r\n\t\tthis.state = {\r\n\t\t\tvalue: this.props.defaultValue\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('哈哈哈哈哈哈我重新执行了')\r\n\t}\r\n\r\n\trender() {\r\n\t\t// console.log('我了个去..')\r\n\t\tconst { onCancel, onSave, PickFiterData, cols, type } = this.props;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{/* 选择器组件： value 属性看文档*/}\r\n\t\t\t\t<PickerView data={PickFiterData} value={this.state.value} cols={cols} onChange={value => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t})\r\n\t\t\t\t}} />\r\n\r\n\t\t\t\t{/* 底部按钮 */}\r\n\t\t\t\t<FilterFooter onCancel={() => {\r\n\t\t\t\t\tonCancel()\r\n\t\t\t\t}} onOk={() => {\r\n\t\t\t\t\tonSave(type, this.state.value)\r\n\t\t\t\t}} />\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n","/Users/huangwenbo/Desktop/coderWhy/react小码哥/课堂/lastCode/react-my/18_react-m-program/hkzf-mobile/src/components/FilterFooter/index.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":3,"column":17,"nodeType":"104","messageId":"105","endLine":3,"endColumn":23},{"ruleId":"102","severity":1,"message":"106","line":5,"column":42,"nodeType":"104","messageId":"105","endLine":5,"endColumn":46},{"ruleId":"102","severity":1,"message":"107","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":16},{"ruleId":"102","severity":1,"message":"108","line":21,"column":9,"nodeType":"104","messageId":"105","endLine":21,"endColumn":12},{"ruleId":"109","severity":1,"message":"110","line":14,"column":13,"nodeType":"111","messageId":"112","endLine":14,"endColumn":15},{"ruleId":"109","severity":1,"message":"110","line":17,"column":13,"nodeType":"111","messageId":"112","endLine":17,"endColumn":15},{"ruleId":"109","severity":1,"message":"110","line":147,"column":60,"nodeType":"111","messageId":"112","endLine":147,"endColumn":62},{"ruleId":"102","severity":1,"message":"113","line":168,"column":11,"nodeType":"104","messageId":"105","endLine":168,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":104,"column":12,"nodeType":"111","messageId":"112","endLine":104,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":48,"column":12,"nodeType":"111","messageId":"112","endLine":48,"endColumn":14},{"ruleId":"102","severity":1,"message":"114","line":7,"column":7,"nodeType":"104","messageId":"105","endLine":7,"endColumn":15},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Button' is defined but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newListData' is assigned a value but never used.","'province' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]